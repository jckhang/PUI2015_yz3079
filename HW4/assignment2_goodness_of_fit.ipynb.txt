{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#Assignment 2:\n",
    "    test the difference between a Binomial/Poisson distribution and a Gaussian distribution as you change the parameters of the Binomial/Poisson. Use: \n",
    "    \n",
    "    1) KS\n",
    "    \n",
    "    2) KL or Chisq\n",
    "    \n",
    "    3) AD\n",
    "    \n",
    "    6 test total (8 if you are ambitious and want to try Pearson's chisq)\n",
    "    \n",
    "    i want you to use the scipy.stats package for this. it will provide tests. For KS and AD you will simply need to generate the distribution the normal will be tested agains: the KS and AD functions in scipy have functionality to test against standard distributions (normal, chisq etc) without you having to code up anything about the distribution itself. KL and chisq do not. I am showing you how to do the AD, KS and KL for binomial, you can replicate it for the poisson or do the Chisq instead of KL.\n",
    "    \n",
    "    even if you just replicate it... PLEASE UNDESRTAND IT! or you will have learned nothing and wasted both of our times"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "my usual imports and setups"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import pylab as pl\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "%pylab inline\n",
    "\n",
    "import os\n",
    "\n",
    "#this makes my plots pretty! but it is totally not mandatory to do it\n",
    "import json\n",
    "s = json.load( open(os.getenv ('PUI2015')+\"/fbb_matplotlibrc.json\") )\n",
    "pl.rcParams.update(s)\n",
    "\n",
    "#plus importing scipy.stats\n",
    "import scipy.stats"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "here are the manual pages fo the tests\n",
    "http://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.kstest.html#scipy.stats.kstest\n",
    "http://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.anderson.html#scipy.stats.anderson\n",
    "http://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.entropy.html#scipy.stats.entropy"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "i need to figure out what each test function returns. let me run them once to see (and read the manual atthe same time!)\n",
    "\n",
    "i am testing for normal against normal and for a binomial w small n*p against normal. that will give me very different outcomes.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "normal on normal KstestResult(statistic=0.044921311934237096, pvalue=0.034266797860505349)\n",
      "normal on normal AndersonResult(statistic=0.32182996295136945, critical_values=array([ 0.574,  0.653,  0.784,  0.914,  1.088]), significance_level=array([ 15. ,  10. ,   5. ,   2.5,   1. ]))\n",
      "\n",
      "poisson on normal KstestResult(statistic=0.5, pvalue=0.0)\n",
      "poisson on normal AndersonResult(statistic=179.49135760269178, critical_values=array([ 0.574,  0.653,  0.784,  0.914,  1.088]), significance_level=array([ 15. ,  10. ,   5. ,   2.5,   1. ]))\n",
      "[ 1.088]\n"
     ]
    }
   ],
   "source": [
    "#generate the distribution\n",
    "dist_n = np.random.randn(1000)\n",
    "\n",
    "#test ad and ks. those are easy\n",
    "print \"normal on normal\", scipy.stats.kstest(dist_n,'norm')\n",
    "print \"normal on normal\", scipy.stats.anderson(dist_n, dist='norm')\n",
    "print \"\" \n",
    "\n",
    "dist_b = np.random.binomial(1, 0.5, 1000)\n",
    "\n",
    "print \"poisson on normal\", scipy.stats.kstest(dist_b,'norm')\n",
    "print \"poisson on normal\", scipy.stats.anderson(dist_b, dist='norm')\n",
    "\n",
    "threshold = scipy.stats.anderson(dist_n, dist='norm')[1][scipy.stats.anderson(dist_n, dist='norm')[2]==[1.0]]\n",
    "print threshold\n",
    "\n",
    "##what is this threshold I am saving??"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "i will leave it to you to study the outputs in detail, but lets use the statistics. \n",
    "\n",
    "the statistics value will be **larger** if the distributions are **not** likely to be related. \n",
    "think about this in terms of rejection of the NULL hypothesis. \n",
    "\n",
    "#try writing down the null for each test and see if scipy manual agrees with you         (the manual spells out the Null)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "the KL divergence is a little trickier: i have to pass it the values of the distribution at some x's: that means i have to pass it a **NORMALIZED HOSTOGRAM OF MY DISTRIBUTION**, i.e. derive a PDF from the data. we have done it before!\n",
    "\n",
    "i have to pass it a function for my comparison distribution evaluated at the x-values where my empirical distribution is evaluated.  not just the name of a distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "distpdf_n, mybins_n, = np.histogram(dist_n, density=True)\n",
    "distpdf_b, mybins_b, = np.histogram(dist_b, density=True)\n",
    "#notice the extra comma on the left side of the '=' sign: that tells numpy take the first two values returned, and throw away the rest\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "then i have to pass it the functional form of a normal PDF, which is returned by the function scipy.stats.norm for example (a google search would have told you!) \n",
    "evaluated at the bin centers of the histogram from before"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " normal on normal 0.0110913132839\n",
      "poisson on normal 1.68189161243\n"
     ]
    }
   ],
   "source": [
    "#get the bin centers\n",
    "bincenters_n = mybins_n[:-1] + 0.5*(mybins_n[1] - mybins_n[0])\n",
    "bincenters_b = mybins_b[:-1] + 0.5*(mybins_b[1] - mybins_b[0])\n",
    "print \"normal on normal\", scipy.stats.entropy(distpdf_n, scipy.stats.norm.pdf(bincenters_n))  \n",
    "print \"poisson on normal\", scipy.stats.entropy(distpdf_b, scipy.stats.norm.pdf(bincenters_b)) \n",
    "\n",
    "#you can interpret this as a distance: it increases as the distributions diverge"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "so it looks like a high value is rejecting the NULL that ... (say it in your own words!!)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#BINOMIAL"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {
    "collapsed": false,
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "#to store the data i am generating an empty array of the size of the values of n i want to test. i do that with np.zeros which takes the length of the array as argument, and the data type as optional argument, but default is float, which is fine by me, so i do not need any argument other then the lenght \n",
    "narray = range(1,50,1)\n",
    "ks_b = np.zeros(len(narray))\n",
    "ad_b = np.zeros(len(narray))\n",
    "kl_b = np.zeros(len(narray))\n",
    "chi2_b = np.zeros(len(narray))\n",
    "\n",
    "\n",
    "def mynorm (x, mu, var):\n",
    "    return scipy.stats.norm.cdf(x, loc=mu, scale=var)\n",
    "\n",
    "#then i put the tests in a for loop so that i can generate a distribution for given parameters once, \n",
    "#and run all tests against it\n",
    "#now the valus that i want to plot depends on how i intend to describe the plot, and viceversa. \n",
    "\n",
    "#here is one way to plot it, knowing the values i get for the tests when \n",
    "#i throw in a poisson distribution with low l and compare it with a gaussian and \n",
    "#assuming that that is a vary bad match\n",
    "p=0.5\n",
    "for i,n in enumerate(narray):\n",
    "    p=0.1 #parameter for the binomial, my arbitrary choice\n",
    "    #generate the distribution\n",
    "    dist = np.random.binomial(n, p, 1000)\n",
    "    #run the tests. \n",
    " \n",
    "    ks_b[i] = scipy.stats.kstest(dist, mynorm, args=(n*p, n*p*(1.0-p)))[0]\n",
    "    ad_b[i] = scipy.stats.anderson(dist, dist='norm')[0]\n",
    "    \n",
    "    \n",
    "    # for KL and Pearson's chisq I have to simulate the normal distribution as well\n",
    "    mybins=np.linspace(min(dist),max(dist), 10) \n",
    "    bincenters = mybins[:-1]+0.5*(mybins[1]-mybins[0])\n",
    "\n",
    "    #when i was coding this up something was wrong. i put some plots in to figure out what... just so you know.\n",
    "    #if i%10 == 0: \n",
    "    #    print n\n",
    "    #    pl.figure()\n",
    "    #    pl.hist(dist, bins=mybins)\n",
    "    #    pl.plot(bincenters, 1000*scipy.stats.norm.pdf(bincenters, loc=n*p, scale=n*p*(1-p)))\n",
    "    kl_b [i] =  scipy.stats.entropy(np.histogram(dist, bins=mybins)[0], scipy.stats.norm.pdf(bincenters, loc=n*p, scale=n*p*(1.0-p)))\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#this is just one way to plot it. get creative and find the best way to show your result!\n",
    "then give me a cell in which you write a caption for the figures you plot. think about how the captions are written in the paper  you have to read for this week assignment: a caption must describe the plot sufficiently well that i do not need to read the paper to understand it. though it will generally lack details of the how and why you see what you see. those are in the paper"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x10b7bd710>"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nPND/AzbCNBHJOMMaAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1148fd910>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "fig = pl.figure(figsize = (15,5))\n",
    "fig.add_subplot(131)\n",
    "pl.plot(narray, ks_b, label='KS')\n",
    "pl.legend()\n",
    "\n",
    "fig.add_subplot(132)\n",
    "pl.plot(narray, ad_b,  label='AD')\n",
    "pl.plot([narray[0], narray[-1]],[threshold, threshold])\n",
    "pl.plot()\n",
    "pl.plot()\n",
    "pl.legend()\n",
    "\n",
    "fig.add_subplot(133)\n",
    "pl.plot(narray, kl_b, label='K-L ')\n",
    "\n",
    "pl.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#POISSON"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "#to store the data i am generating an empty array of the size of the values of n i want to test. i do that with np.zeros which takes the length of the array as argument, and the data type as optional argument, but default is float, which is fine by me, so i do not need any argument other then the lenght \n",
    "narray = range(1,50,1)\n",
    "ks_b = np.zeros(len(narray))\n",
    "ad_b = np.zeros(len(narray))\n",
    "kl_b = np.zeros(len(narray))\n",
    "chi2_b = np.zeros(len(narray))\n",
    "\n",
    "\n",
    "#then i put the tests in a for loop so that i can generate a distribution for given parameters once, \n",
    "#and run all tests against it\n",
    "#now the valus that i want to plot depends on how i intend to describe the plot, and viceversa. \n",
    "\n",
    "#here is one way to plot it, knowing the values i get for the tests when \n",
    "#i throw in a poisson distribution with low l and compare it with a gaussian and \n",
    "#assuming that that is a vary bad match\n",
    "\n",
    "for i,n in enumerate(narray):\n",
    "    p=0.1 #parameter for the binomial, my arbitrary choice\n",
    "    #generate the distribution\n",
    "    dist = np.random.poisson(n, 1000)\n",
    "    #run the tests. \n",
    "    ks_b[i] = scipy.stats.kstest(dist, mynorm, args=(n, n))[0]\n",
    "    ad_b[i] = scipy.stats.anderson(dist, dist='norm')[0]\n",
    "    \n",
    "        \n",
    "    # for KL and Pearson's chisq I have to simulate the normal distribution as well\n",
    "    mybins = np.linspace(min(dist),max(dist), 10) \n",
    "    bincenters = mybins[:-1]+0.5*(mybins[1]-mybins[0])\n",
    " \n",
    "    kl_b [i] =  scipy.stats.entropy(np.histogram(dist, bins=mybins)[0], scipy.stats.norm.pdf(bincenters, loc=n*p, scale=n*p*(1.0-p)))\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x112b91550>"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x112e65a50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "fig = pl.figure(figsize = (15,5))\n",
    "fig.add_subplot(131)\n",
    "pl.plot(narray, ks_b, label='KS')\n",
    "pl.legend()\n",
    "\n",
    "fig.add_subplot(132)\n",
    "pl.plot(narray, ad_b,  label='AD')\n",
    "pl.plot([narray[0], narray[-1]],[threshold, threshold])\n",
    "pl.plot()\n",
    "pl.plot()\n",
    "pl.legend()\n",
    "\n",
    "fig.add_subplot(133)\n",
    "pl.plot(narray, kl_b, label='K-L ')\n",
    "\n",
    "pl.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##TOTALLY OPTIONAL fun with KL: the KL divergence is a measure of how much approximation you have to do to represent one distribution with the other. you can see what it looks point by point, before you integrate and get a single distance number"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "pl.figure(figsize=(15,15))\n",
    "\n",
    "p = lambda x, mu : scipy.stats.distributions.poisson.pmf(x,mu)\n",
    "q = lambda x, mu : scipy.stats.distributions.norm.pdf(x-mu)\n",
    "c = lambda x, mu : scipy.stats.distributions.chi2.pdf(x, df=mu)\n",
    "f = lambda x, mu : scipy.stats.distributions.f.pdf(x,100,100)\n",
    "\n",
    "Dkl = lambda x ,mu, p :  p(x, mu)* np.log10(q(x, mu)) + p(x, mu) *np.log10(p(x, mu))\n",
    "\n",
    "def model(x) : \n",
    "    return 1./(s*np.sqrt(2*np.pi))*exp(-((x-m)/2./2./s)**2)\n",
    "\n",
    "x=np.linspace(-10,10,100)\n",
    "pl.plot(x, q(x,1), label='norm')\n",
    "pl.plot(x, p(x,1), label='poisson')\n",
    "pl.plot(x, Dkl(x, 1, p), '-.', label = 'KL - poisson')\n",
    "\n",
    "#print np.nansum(Dkl(np.linspace(0,30,1000), 1, p))\n",
    "\n",
    "\n",
    "pl.plot(x, c(x,1), label='f')\n",
    "pl.plot(x,Dkl(x, 1, c), '--', label = 'KL - chi2')\n",
    "\n",
    "\n",
    "\n",
    "#print np.nansum(Dkl(np.linspace(0,30,1000), 1, c))\n",
    "\n",
    "\n",
    "pl.plot(x, f(x,1), label='F')\n",
    "pl.plot(x,Dkl(x, 1, f), '--', label = 'KL - F')\n",
    "\n",
    "#print np.nansum(Dkl(np.linspace(0,30,1000), 1, f))\n",
    "bins = np.arange(0, 99, 10)\n",
    "\n",
    "pl.xlim(0,10)\n",
    "pl.legend( fontsize = 20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##WRITE A CAPTION HERE IN THIS CELL.."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
